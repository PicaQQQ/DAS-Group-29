---
title: "Analysis of individual earns"
author: "Group 29"
number-sections: true
format:  
  html:
    embed-resources: true
    code-tools: true
    code-overflow: wrap
    math: mathjax
  pdf: default
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  eval: true
  warning: false
  message: false
output:
  pdf_document:
    keep_tex: false
---

```{r}
#| label: libraries
#| include: false
library(ResourceSelection)
library(tidyverse)
library(MASS)
library(detectseparation)
library(arm)
library(caret)
library(ggplot2)
library(glmnet)
library(moderndive)
library(gapminder)
library(sjPlot)
library(stats)
library(jtools)
library(janitor)
library(dplyr)
library(GGally)
library(ROCR)
library(gt)
library(kableExtra)
```

```{r}
#| label: data_tidy
#| include: false
data <- read.csv("dataset29.csv", header = TRUE, na.strings = c("?", " ", "","?,"))
data <- data %>%
  mutate(across(where(is.character), ~ gsub(",$", "", trimws(.))),
         Income = factor(Income, levels = c("<=50K", ">50K")),
         across(c(Education, Marital_Status, Occupation, Sex, Nationality), as.factor))
data$Hours_PW <- as.numeric(data$Hours_PW)
#delete NA items
sum(is.na(data))
data <- na.omit(data)
```

# Introduction

**Dataset 29** were collected from the US 1994 Census database. This dataset contain data on individuals regarding their income level, and various socioeconomic factors. You will have access to the following variables:

-   ​**Age** - The age of the individual in years\
-   ​**Education** - Highest education level obtained by the individual\
-   ​**Marital_Status** - The marital status of the individual\
-   ​**Occupation** - The occupation of the individual\
-   ​**Sex** - The sex of the individual\
-   ​**Hours_Pw** - Number of hours worked per week by the individual\
-   ​**Nationality** - The nationality of birth of the individual\
-   ​**Income** - A factor variable with two levels: `>50k` if the individual earns more than \$50k per year, or `<=50k` if the individual earns less than or equal to \$50k per year

------------------------------------------------------------------------

## Task

Imagine you have been tasked by the government to identify which features based on the census data impact the income an individual makes: - Which factors influence whether an individual earns more than \$50k per year?

You should:

1\. Conduct an analysis to answer your question using a ​**Generalised Linear Model (GLM)**\
2. Summarise your results in the form of a presentation

# Exploratory Data Analysis {#sec-EDA}

Summary statistics of **Income** are presented in the following for each column separately.

Observe the correlation of the numeric of data:

```{r}
#| label: fig-Numeric-Data
#| echo: false
#| fig-pos: h
#| fig-cap: Numeric Data Correlation 
ggpairs(data[,c("Age","Hours_PW","Income")])
```

## Data levels

Check the levels of different category variables:

```{r}
#| label: data-levels
#| echo: false
levels(data$Education)
levels(data$Marital_Status)
levels(data$Occupation)
levels(data$Sex)
levels((data$Nationality))
```

Use the Chi_square test to test the correlation of category variable with response:

```{r}
#| label: correlations of categorical data
#| echo: false
dependent_var <- "Income"
independent_vars <- c("Education", "Marital_Status", "Occupation", "Sex", "Nationality")
results <- list()
for (var in independent_vars) {
  contingency_table <- table(data[[var]], data[[dependent_var]])
  chi_test <- chisq.test(contingency_table)
    results[[var]] <- chi_test
}
for (var in names(results)) {
  cat("Chi-square test for", var, "vs ",dependent_var,":\n")
  print(results[[var]])
  cat("\n")
}
```

The result show the p-value of nationality and income is 0.5965, which is larger than 0.5, so they may be independence, other variables have significance influence in income.

## Income Distribution

```{r}
#| label: Income-Distribution
#| echo: false
cat("Income distribution:\n")
table(data$Income)
```

```{r}
#| label: fig-Income-Distribution
#| fig-pos: H
#| fig-cap: Income Distribution.

ggplot(data, aes(Income)) + 
  geom_bar()
```

The income distribution analysis reveals that 75.2% of individuals earn \<=50K, while only 24.8% earn \>50K. This indicates a significant class imbalance, where the majority of the dataset consists of low-income individuals.

This imbalance can impact predictive modeling, as machine learning algorithms may become biased towards the dominant class (\<=50K), leading to poor classification performance for high-income individuals. If a classification model is trained without addressing this issue, it may struggle to accurately predict the \>50K category.

## Occupation by Income

```{r}
#| label: Occupation-Distribution

result <- data %>%
  tabyl(Income, Occupation) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()

result

```

```{r}
#| label: fig-Occupation-Distribution
#| fig-pos: H
#| fig-cap: Occupation Distribution.

ggplot(data, aes(x=Occupation)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Occupation-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation.
ggplot(data, aes(x = Income, fill = Occupation)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Occupation") +
  coord_flip()
```

```{r}
#| label: fig-Income-Occupation-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation.
ggplot(data=data,aes(x=Income,group=Occupation))+
  geom_bar(aes(y=..prop..,fill=Occupation),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

The analysis of occupation by income shows significant variation across different job categories.

Administrative/Clerical roles: Approximately 85.6% of individuals in this category earn \<=50K, while only 14.4% earn \>50K, indicating that these jobs are predominantly lower-income. Craft and repair jobs: 76.4% of workers earn \<=50K, with 23.6% earning \>50K, suggesting a slightly better income distribution compared to clerical jobs. Executive/Managerial roles: This category has the highest proportion of high-income earners, with 44.9% earning \>50K, showing that leadership positions significantly increase the likelihood of higher income. Farming/Fishing occupations: 88.1% of individuals earn \<=50K, and only 11.9% earn \>50K, reinforcing that agricultural jobs tend to be lower-paying. Handlers/Cleaners: The lowest income distribution, with 90.3% earning \<=50K and only 9.7% earning \>50K, indicating very limited access to higher salaries. This distribution highlights that occupational type is a key factor in determining income, with executive roles offering the highest proportion of high-income earners, while farming, cleaning, and clerical jobs predominantly fall into the lower-income category. These findings suggest that education, experience, and industry type play crucial roles in income disparities.

## Education by Income

```{r}
#| label: Education-Distribution

result <- data %>%
  tabyl(Income,Education) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
result
```

```{r}
#| label: fig-Education-Distribution
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Education Distribution.

ggplot(data, aes(x=Education)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Education-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 6
#| fig-cap: Income by Education.
# Income~Education
ggplot(data, aes(x = Income, fill = Education)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Education") +
  coord_flip()  
```

```{r}
#| label: fig-Income-Education-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 6
#| fig-cap: Income by Education.
# Income~Education
ggplot(data=data,aes(x=Income,group=Education))+
  geom_bar(aes(y=..prop..,fill=Education),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

The distribution of income across different education levels shows a clear correlation between higher education and increased income potential:

Lower education levels (1st-4th, 5th-6th, 12th grade):

100% of individuals in these categories earn \<=50K, with no individuals earning \>50K. This indicates that individuals with minimal education have almost no access to high-income jobs. 10th and 11th grade education:

93.8% of individuals with a 10th-grade education earn \<=50K, while only 6.3% earn \>50K. 92.9% of individuals with an 11th-grade education earn \<=50K, with 7.1% in the high-income group. Although slightly better than primary education, these groups still have a very low likelihood of earning above 50K.

Key Takeaways: Education level is a strong predictor of income. Individuals without a high school diploma have almost no chance of reaching the high-income category. These findings highlight the importance of higher education in increasing earning potential and access to well-paying jobs.

## Martial_Status by Income

```{r}
#| label: tbl-Martial_Status-Distribution
#| tbl-cap: Martial_Status Distribution.
#| tbl-pos: H
result <- data %>%
  tabyl(Income,Marital_Status) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Marital_Status-Distribution
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Marital_Status Distribution.
ggplot(data, aes(x=Marital_Status)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Marital_Status
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Marital_Status.
ggplot(data, aes(x = Income, fill = Marital_Status)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Marital_Status") +
  coord_flip()  
ggplot(data=data,aes(x=Income,group=Marital_Status))+
  geom_bar(aes(y=..prop..,fill=Marital_Status),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

The distribution of income by marital status reveals a strong correlation between marriage and income level:

Married individuals (civil spouse):

44.3% earn \>50K, the highest proportion among all marital statuses. This suggests that marriage (especially in stable relationships) is associated with higher earnings, possibly due to dual-income households or increased financial stability. Divorced individuals:

85.8% earn \<=50K, while 14.2% earn \>50K. Although lower than married individuals, this group has a higher proportion of high-income earners than single or separated individuals. Never-married and separated individuals:

95.5% of never-married individuals and 97.9% of separated individuals earn \<=50K, with only a very small fraction entering the \>50K category. This indicates that single individuals are more likely to belong to lower-income groups, possibly due to younger age demographics and lower accumulated financial resources. Key Takeaways: Being married is strongly associated with higher income levels. Single and separated individuals are less likely to earn above 50K, which may reflect differences in career stability, accumulated wealth, or household income. This analysis suggests that marital status can play a significant role in economic well-being.

## Sex by Income

```{r}
#| label: tbl-Sex-Distribution
#| tbl-cap: Sex Distribution.
#| tbl-pos: H
result <- data %>%
  tabyl(Income,Sex) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Sex-Distribution
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Sex Distribution.
ggplot(data, aes(x=Sex)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Sex
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Sex.

ggplot(data, aes(x = Income, fill = Sex)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Sex") +
  coord_flip()  
ggplot(data=data,aes(x=Income,group=Sex))+
  geom_bar(aes(y=..prop..,fill=Sex),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

The distribution of income by gender reveals a significant disparity between males and females:

Females:

88.2% earn \<=50K, while only 11.8% earn \>50K. This indicates that women are much less likely to be in the high-income category. Males:

69.6% earn \<=50K, whereas 30.4% earn \>50K. The proportion of males earning above 50K is significantly higher than that of females. Key Takeaways: Men are significantly more likely to earn \>50K compared to women. The income gap suggests possible gender disparities in wages, career advancement, or occupational roles. These findings highlight the need to investigate underlying causes, such as differences in industries, job roles, or social factors affecting earnings.

## Nationality by Income

```{r}
#| label: Nationality-Distribution

result <- data %>%
  tabyl(Income,Nationality) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Nationality-Distribution
#| fig-pos: H
#| fig-width: 6
#| fig-height: 12
#| fig-cap: Nationality Distribution.
ggplot(data, aes(x=Nationality)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Nationality
#| fig-pos: H
#| fig-width: 8
#| fig-height: 6
#| fig-cap: Income by Nationality.
# Income~Education
ggplot(data, aes(x = Income, fill = Nationality)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Nationality") +
  coord_flip()  
ggplot(data=data,aes(x=Income,group=Nationality))+
  geom_bar(aes(y=..prop..,fill=Nationality),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

The income distribution across different nationalities varies significantly:

Cambodia:

50% earn \<=50K, and 50% earn \>50K. This is the most balanced distribution among the nationalities observed. Canada:

62.5% earn \<=50K, while 37.5% earn \>50K. A relatively high proportion of individuals from Canada belong to the high-income group. China:

75% earn \<=50K, and 25% earn \>50K. While some individuals reach the high-income group, the majority remain below 50K. Colombia:

100% earn \<=50K, with no individuals in the \>50K category. This suggests that people from this nationality are more likely to be in lower-income jobs. Cuba:

83.3% earn \<=50K, while 16.7% earn \>50K. The majority still earn less than 50K, but a small proportion reaches higher income levels. Key Takeaways: Nationality appears to be a factor influencing income distribution. Some nationalities, such as Canada and Cambodia, have higher proportions of high-income individuals, while others, like Colombia and Cuba, have a stronger concentration in the low-income group. These differences could be attributed to factors such as job opportunities, skill levels, or immigration status affecting income potential.

However, in the dataset, there are 1255 samples with American nationality, accounting for 90.7% of the total. Due to this highly imbalanced distribution, nationality is not suitable as an explanatory variable.

## Age by Income

```{r}
#| label: fig-Age-Distribution
#| fig-pos: H
#| fig-cap: Age Distribution.
ggplot(data, aes(x = Age)) +
  geom_histogram(
    bins = 20, 
    fill = "skyblue", 
    color = "white",
    alpha = 0.7
  )
```

```{r}
#| label: fig-Income-Age
#| fig-pos: H
#| fig-cap: Income by Age.
ggplot(data, aes(x = Age, y = Income)) +
  geom_boxplot() +
  labs(x = "Age", y = "Income")
```

The analysis of age distribution and its relationship to income reveals the following trends:

Age Distribution:

The dataset contains individuals aged 17 to 90 years old. The age distribution appears roughly normal, with most individuals concentrated in their 30s and 40s. Income and Age Statistics:

Low-income group (\<=50K): Average age: 36.1 years 25th percentile: 25 years 50th percentile (median): 33 years 75th percentile: 45 years High-income group (\>50K): Average age: 43.9 years 25th percentile: 35 years 50th percentile (median): 43 years 75th percentile: 51 years Key Takeaways: Older individuals are more likely to be in the high-income group. The median age of high-income earners (43 years) is significantly higher than that of low-income earners (33 years). This suggests that experience, seniority, and career progression contribute to higher earnings over time. Younger individuals tend to belong to the low-income group. This is likely because they are in the early stages of their careers, earning entry-level salaries.

## Hours_pw by Income

```{r}
#| label: fig-Hours_PW-Distribution
#| fig-pos: H
#| fig-cap: Hours_PW Distribution.
ggplot(data, aes(x = Hours_PW)) +
  geom_histogram(
    bins = 20, 
    fill = "lightpink", 
    color = "white",
    alpha = 0.7
  )
```

```{r}
#| label: fig-Income-Hours_PW
#| fig-pos: H
#| fig-cap: Income by Hours_PW.
ggplot(data, aes(x = Hours_PW, y = Income)) +
  geom_boxplot() +
  labs(x = "Hours_PW", y = "Income")
```

The analysis of weekly work hours and its relationship to income reveals key differences between low and high earners:

Work Hours Distribution:

The dataset contains a variety of work hours, with most individuals working around 40 hours per week. The distribution appears right-skewed, meaning some individuals work significantly longer hours. Work Hours Statistics by Income:

Low-income group (\<=50K): The most common work hours are 40 hours per week, with 546 individuals working this amount. There are 58 unique work hour values, indicating a wide range of working schedules. High-income group (\>50K): The most common work hours are also 40 hours per week, but only 142 individuals in this category work this amount. There are 39 unique work hour values, suggesting slightly less variability in working hours compared to low-income earners. Key Takeaways: Most individuals work 40 hours per week, regardless of income level. High-income earners tend to work more stable hours, while low-income earners exhibit greater variation in work schedules. Longer working hours do not necessarily guarantee higher income, suggesting that job type and skill level are more influential factors in determining earnings.

# Model Selection

Fitting full model.

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\sum_{i=1}^{14}\widehat{\beta}_{\mbox{Education,i}}\cdot\mathbb{I}_{\mbox{Education,i}}(x)+\\+\sum_{i=1}^{12}\widehat{\beta}_{\mbox{Occupation,i}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)+\sum_{i=1}^{5}\widehat{\beta}_{\mbox{Marital_Status,i}}\cdot\mathbb{I}_{\mbox{Marital_Status,i}}(x)+\\+\sum_{i=1}^{31}\widehat{\beta}_{\mbox{Nationality,i}}\cdot\mathbb{I}_{\mbox{Nationality,i}}(x)+\widehat{\beta}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Male}}(x)+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}$$

-   This means that estimates from the logistic regression model are for a change on the log-odds scale for income \>=50k in comparison to the response baseline income \<50k

```{r}
#| label: glm_full_model
#| echo: false

full_model = glm(Income ~ Age + Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"), data = data)

summary(full_model)
```

Check the separation of data:

```{r}
detect_separation_full_model =glm(Income ~ Age + Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"), data = data,method='detect_separation')

print(detect_separation_full_model)
```

Use the Forward-Backward selection of stepwise regression and check the separation :

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\sum_{i=1}^{14}\widehat{\beta}_{\mbox{Education,i}}\cdot\mathbb{I}_{\mbox{Education,i}}(x)+\\
+\sum_{i=1}^{12}\widehat{\beta}_{\mbox{Occupation,i}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)+\sum_{i=1}^{5}\widehat{\beta}_{\mbox{Marital_Status,i}}\cdot\mathbb{I}_{\mbox{Marital_Status,i}}(x)+\\
+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}
$$

```{r}
#| label: glm_stepAIC_model
#| echo: false

stepAIC_model <- stepAIC(
  full_model,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model)
detect_separation_stepAIC_model=glm(formula =Income ~ Age + Education + Hours_PW + Marital_Status + Occupation, family = binomial(link = "logit"), data = data,method='detect_separation')
print(detect_separation_stepAIC_model)

```

The model selection process involves fitting a Generalized Linear Model (GLM) with a binomial logistic regression to predict whether an individual's income falls into the \>50K or \<=50K category.

1.  Full Model Fitting The initial model (full_model) includes all available predictor variables: Age, Education, Sex, Work Hours per Week (Hours_PW), Marital Status, Occupation, and Nationality. A separation detection test (detect_separation_full_model) is applied to check if certain variables lead to perfect separation, which may cause convergence issues in the model. The summary of the full model provides insights into which variables are statistically significant.
2.  Model Optimization using Stepwise Akaike Information Criterion (AIC) selection is applied (stepAIC_model), which iteratively removes the least significant predictors to find the best-performing model. The final optimized model retains only the most relevant predictors: Age, Education, Work Hours per Week, Marital Status, and Occupation. A separation detection test (detect_separation_stepAIC_model) is performed again to check whether the optimized model exhibits perfect separation issues.
3.  Key Takeaways: The full model includes all predictors but may contain unnecessary variables that do not contribute significantly. Stepwise AIC selection helps refine the model by retaining only the most informative variables, reducing overfitting and improving interpretability. The final optimized model suggests that Age, Education, Work Hours, Marital Status, and Occupation are the strongest predictors of income. Nationality and Sex are removed in the AIC-selected model, indicating they may not have a significant impact on predicting income in this dataset. The model suffers from perfect separation issues, with the explanatory variables Education and Occupation exhibiting perfect separation.

## Option choose of model

To address the complete separation issue, some explanatory variables have been merged into broader categories. This helps ensure that each category has sufficient data points, improving the stability of the logistic regression model.

```{r}
#| label: merge-Education-Marital_Status
#| include: false
data.new <- data

data.new$Education <- as.factor(ifelse(data.new$Education %in% c("1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th", "12th"), "Low_Education", as.character(data.new$Education)))

data.new$Education <- as.factor(ifelse(data.new$Education %in% c("Assoc-acdm","Assoc-voc","Bachelors","Doctorate","HS-grad","Masters","Prof-school","Some-college"), "High_Education", as.character(data.new$Education)))

data.new$Marital_Status <- as.factor(ifelse(data.new$Marital_Status %in% c( "Separated", "Widowed","Never-married","Divorced"), "Unmarried", as.character(data.new$Marital_Status)))

data.new$Marital_Status <- as.factor(ifelse(data.new$Marital_Status %in% c("Married-spouse-absent","Married-civ-spouse"), "Married", as.character(data.new$Marital_Status)))
```

1.  Education Level Merging Low Education:

Groups together individuals with education levels from 1st grade to 12th grade (e.g., 1st-4th, 5th-6th, 7th-8th, 9th, 10th, 11th, 12th). These individuals generally have no formal higher education and are more likely to be in low-income jobs. High Education:

Includes individuals with some form of post-secondary education (e.g., Associate degree, Bachelor’s, Master’s, Doctorate, HS-grad, Prof-school, Some-college). These individuals have better earning potential and are more likely to be in high-income categories.

2.  Marital Status Merging Unmarried:

Combines Separated, Widowed, Never-married, and Divorced into a single category. These individuals tend to have lower financial stability compared to married individuals. Combines Married-spouse-absent and Married-civ-spouse into Married category. Married individuals generally have more financial stability, often benefiting from dual-income households.

For Marital_Status:

```{r}
#| label: tbl-Martial_Status-Distribution-new
#| tbl-cap: Martial_Status  Distribution.
#| tbl-pos: H
result <- data.new %>%
  tabyl(Income,Marital_Status) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Income-Marital_Status-new-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Marital_Status.

ggplot(data=data.new,aes(x=Income,group=Marital_Status))+
  geom_bar(aes(y=..prop..,fill=Marital_Status),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

For Education:

```{r}
#| label: tbl-Education-new
#| tbl-cap: Education Distribution.
#| tbl-pos: H
result <- data.new %>%
  tabyl(Income,Education) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()

gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Income-Education-new-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Education.
ggplot(data=data.new,aes(x=Income,group=Education))+
  geom_bar(aes(y=..prop..,fill=Education),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

3.  Visualizing the Effects of Merging
    -   Marital Status vs. Income:

        The distribution of income across the newly grouped Married and Unmarried categories is displayed.

    -   Education vs. Income:

        The newly created Low Education and High Education categories allow for a clearer comparison of income distribution between different education levels. Key

Takeaways: Merging categories helps reduce model complexity and prevent complete separation issues. Individuals with higher education levels are more likely to earn \>50K compared to those in the Low Education category. Married individuals show a higher proportion of high-income earners, reinforcing previous findings about marital status and financial stability. These transformations improve the model's ability to generalize and make more accurate predictions.

## Combine occupation types (physical labor and mental labor)

```{r}
#| label: merge-Occupation-M-P

data.new.1<-data.new

data.new.1$Occupation <- as.factor(ifelse(data.new.1$Occupation %in% c("Adm-clerical","Exec-managerial","Prof-specialty","Sales","Tech-support","Exec-managerial"), "Mental Labor", as.character(data.new.1$Occupation)))

data.new.1$Occupation <- as.factor(ifelse(data.new.1$Occupation %in% c("Craft-repair","Farming-fishing","Handlers-cleaners","Machine-op-inspct","Transport-moving","Other-service","Priv-house-serv","Protective-serv"), "Physical Labor", as.character(data.new.1$Occupation)))
```

```{r}
#| label: tbl-Occupation-new-1
#| tbl-cap: Occupation Distribution (physical labor and mental labor).
#| tbl-pos: H

result <- data.new.1 %>%
  tabyl(Income,Occupation) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Income-Occupation-new-1-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation
ggplot(data=data.new.1, aes(x = Income, fill = Occupation)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Occupation") +
  coord_flip()  
```

```{r}
#| label: fig-Income-Occupation-new-1-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation
ggplot(data=data.new.1,aes(x=Income,group=Occupation))+
  geom_bar(aes(y=..prop..,fill=Occupation),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

To simplify occupational categories and address class imbalance, occupations have been grouped into two broader categories:

Mental Labor (White-collar jobs):

Includes occupations such as Administrative clerical, Executive managerial, Professional specialty, Sales, and Technical support. These jobs typically involve cognitive work, decision-making, and problem-solving.

Physical Labor (Blue-collar jobs):

Includes Craft repair, Farming and fishing, Handlers and cleaners, Machine operators, Transport workers, Other services, Private household services, and Protective services. These jobs are more labor-intensive and require physical exertion.

Analysis of Income Distribution after Merging:

Mental labor jobs have a higher proportion of individuals earning \>50K, reinforcing the idea that cognitive and managerial roles tend to offer better salaries. Physical labor jobs predominantly fall in the \<=50K category, suggesting that manual labor occupations generally provide lower wages. The proportion of high-income earners in mental labor jobs is significantly higher than in physical labor jobs, highlighting the economic advantage of cognitive and executive occupations.

Key Takeaways: Merging occupations into Physical vs. Mental labor simplifies the analysis while preserving meaningful insights. Mental labor positions are more likely to be associated with higher salaries. Physical laborers predominantly fall into the low-income category, likely due to industry pay standards and job requirements. These findings emphasize the importance of education and skill specialization in securing higher-paying jobs.

## Combine occupation types (by PRC Job Classification List)

ref:<https://zchweb.oss-cn-beijing.aliyuncs.com/contract/temp/2021122116541363304.pdf>

```{r}
#| label: merge-Occupation-PRC_Job_Classification_List
data.new.2<-data.new

data.new.2$Occupation <- as.factor(ifelse(data.new.2$Occupation %in% c("Exec-managerial"), "1", as.character(data.new.2$Occupation)))

data.new.2$Occupation <- as.factor(ifelse(data.new.2$Occupation %in% c("Prof-specialty","Tech-support"), "2", as.character(data.new.2$Occupation)))

data.new.2$Occupation <- as.factor(ifelse(data.new.2$Occupation %in% c("Adm-clerical"), "3", as.character(data.new.2$Occupation)))

data.new.2$Occupation <- as.factor(ifelse(data.new.2$Occupation %in% c("Sales","Handlers-cleaners","Other-service","Priv-house-serv","Protective-serv"), "4", as.character(data.new.2$Occupation)))

data.new.2$Occupation <- as.factor(ifelse(data.new.2$Occupation %in% c("Farming-fishing"), "5", as.character(data.new.2$Occupation)))

data.new.2$Occupation <- as.factor(ifelse(data.new.2$Occupation %in% c("Craft-repair","Machine-op-inspct","Transport-moving"), "6", as.character(data.new.2$Occupation)))


```

```{r}
#| label: tbl-Occupation-new-2
#| tbl-cap: Occupation Distribution (PRC Job Classification List).
#| tbl-pos: H

result <- data.new.2 %>%
  tabyl(Income,Occupation) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()

gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Income-Occupation-new-2-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation
ggplot(data=data.new.2, aes(x = Income, fill = Occupation)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Occupation") +
  coord_flip() 
```

```{r}
#| label: fig-Income-Occupation-new-2-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation
ggplot(data=data.new.2,aes(x=Income,group=Occupation))+
  geom_bar(aes(y=..prop..,fill=Occupation),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

To further refine the occupation categories, we classify jobs according to the PRC Job Classification List. This classification system groups occupations based on skill levels and job nature, which allows for a more structured income comparison.

Income Distribution Analysis After Merging:

Category 1 (Senior Management) has the highest proportion of individuals earning \>50K, reinforcing the idea that executive roles are highly paid. Category 2 (Specialists & Technical Support) also has a notable presence in the high-income group, indicating that specialized skills lead to better salaries. Category 4 (Sales & Service) and Category 5 (Agriculture & Fishing) have the lowest share of high-income earners, highlighting the financial struggles in these job sectors.

Key Takeaways: The PRC Job Classification List provides a structured way to analyze income disparities across different occupational groups. Management and technical jobs tend to have higher salaries, while sales, service, and agricultural jobs have a greater share of low-income earners. Grouping occupations in this way allows for more precise policy recommendations and workforce planning.

## Combine occupation types (by International Standard Classification of Occupations (ISCO-08))

ref:<https://ilostat.ilo.org/methods/concepts-and-definitions/classification-occupation/>

```{r}
#| label: merge-Occupation-ISCO_08
data.new.3<-data.new

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Exec-managerial"), "1", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Prof-specialty"), "2", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Tech-support"), "3", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Adm-clerical"), "4", as.character(data.new.3$Occupation)))


data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Farming-fishing"), "6", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Other-service","Priv-house-serv","Protective-serv","Sales"), "5", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Farming-fishing"), "6", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Craft-repair"), "7", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Transport-moving","Machine-op-inspct"), "8", as.character(data.new.3$Occupation)))

data.new.3$Occupation <- as.factor(ifelse(data.new.3$Occupation %in% c("Handlers-cleaners"), "9", as.character(data.new.3$Occupation)))
	


```

```{r}
#| label: tbl-Occupation-new-3
#| tbl-cap: Occupation Distribution (ISCO-08).
#| tbl-pos: H

result <- data.new.3 %>%
  tabyl(Income,Occupation) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()

gt_table <- gt(result)|>
  tab_options(
    table.width = pct(100),
    table.font.size = pct( max(50, 100 - ncol(result) * 5) )
  )
gt_table
```

```{r}
#| label: fig-Income-Occupation-new-3-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation
ggplot(data=data.new.3, aes(x = Income, fill = Occupation)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Occupation") +
  coord_flip()  
```

```{r}
#| label: fig-Income-Occupation-new-3-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Income by Occupation
ggplot(data=data.new.3,aes(x=Income,group=Occupation))+
  geom_bar(aes(y=..prop..,fill=Occupation),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

The outcome of three classification cases：

Mental-Physical Model:

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\widehat{\beta}_{\mbox{Low_Education}}\cdot\mathbb{I}_{\mbox{Low_Education}}(x)+\widehat{\beta}_{\mbox{Physical_Labor}}\cdot\mathbb{I}_{\mbox{Physical_Labor}}(x)+\widehat{\beta}_{\mbox{Unmarried}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)+\widehat{\beta}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Male}}(x)+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}$$

```{r}
#| label: merge_model_check-1
model_full_new.1 <-glm(Income ~ Age +Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"),data = data.new.1)

stepAIC_model_new.1 <- stepAIC(
  model_full_new.1,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model_new.1)

detect_separation_model <- glm(Income ~ Age + Education +Sex+ Marital_Status +Occupation+ Hours_PW,data = data.new.1, family = binomial(link="logit"),method='detect_separation')
print(detect_separation_model)
```

PRC Model:

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\widehat{\beta}_{\mbox{Low_Education}}\cdot\mathbb{I}_{\mbox{Low_Education}}(x)+\\+\sum_{i=1}^{6}\widehat{\beta}_{\mbox{Occupation,i}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)+\widehat{\beta}_{\mbox{Unmarried}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)+\\+\widehat{\beta}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Male}}(x)+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}$$

```{r}
#| label: merge_model_check-2
model_full_new.2 <-glm(Income ~ Age +Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"),data = data.new.2)

stepAIC_model_new.2 <- stepAIC(
  model_full_new.2,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model_new.2)

detect_separation_model <- glm(Income ~ Age + Education +Sex+ Marital_Status +Occupation+ Hours_PW,data = data.new.2, family = binomial(link="logit"),method='detect_separation')
print(detect_separation_model)
```

ISCO-08 Model:

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\widehat{\beta}_{\mbox{Low_Education}}\cdot\mathbb{I}_{\mbox{Low_Education}}(x)+\\+\sum_{i=1}^{9}\widehat{\beta}_{\mbox{Occupation,i}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)+\widehat{\beta}_{\mbox{Unmarried}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)+\\+\widehat{\beta}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Male}}(x)+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}$$

```{r}
#| label: merge_model_check-3
model_full_new.3 <-glm(Income ~ Age +Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"),data = data.new.3)

stepAIC_model_new.3 <- stepAIC(
  model_full_new.3,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model_new.3)

detect_separation_model <- glm(Income ~ Age + Education +Sex+ Marital_Status +Occupation+ Hours_PW,data = data.new.3, family = binomial(link="logit"),method='detect_separation')
print(detect_separation_model)
```

The International Standard Classification of Occupations (ISCO-08) is used to categorize occupations into structured groups based on job function and skill level. This classification allows for a globally standardized approach to analyzing income distribution by profession.

Income Distribution Analysis After Merging:

Category 1 (Managers) and Category 2 (Professionals) have the highest share of individuals earning \>50K, emphasizing that managerial and specialized roles offer better earnings. Category 5 (Service & Sales) and Category 6 (Agricultural & Fishery) exhibit the lowest proportion of high-income earners, indicating the financial constraints faced by these workers. Category 7 (Craft Workers) and Category 8 (Machine Operators) have an intermediate income distribution, suggesting that skilled manual labor provides moderate earnings.

Model Selection and Performance Comparison:

The stepwise AIC model selection process was applied separately to datasets using different occupational classification methods (Mental vs. Physical Labor, PRC Job Classification, and ISCO-08). All models showed improvement in fitting compared to the full model, but the best performance was observed with the ISCO-08 classification. Nationality was removed in the AIC-selected models, reinforcing the earlier observation that nationality has little impact on income prediction.

Key Takeaways: ISCO-08 classification provides a structured way to assess income distribution across occupations. Managers and professionals dominate the high-income group, while service, sales, and agriculture workers struggle with lower wages. Machine operators and craft workers occupy a middle ground, earning more than service workers but less than professionals. The final model using ISCO-08 classification achieves a better balance between accuracy and interpretability, making it a robust choice for workforce and economic analysis.

# Model Check

Odds of Mental-Physical Model:

```{r}
#| label: fig-stepAIC_model_new-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Model Plot for stepAIC_model_new.1

plot_model(stepAIC_model_new.1, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)

```

Odds of PRC Model:

```{r}
#| label: fig-stepAIC_model_new-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 6
#| fig-cap: Model Plot for stepAIC_model_new.2

plot_model(stepAIC_model_new.2, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)
```

Odds of ISCO-08 Model:

```{r}
#| label: fig-stepAIC_model_new-3
#| fig-pos: H
#| fig-width: 6
#| fig-height: 6
#| fig-cap: Model Plot for stepAIC_model

plot_model(stepAIC_model_new.3, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)
```

```{r}
#|label: anova-test
anova_result <- anova(stepAIC_model_new.1)
print(anova_result)
anova_result <- anova(stepAIC_model_new.2)
print(anova_result)
anova_result <- anova(stepAIC_model_new.3)
print(anova_result)
```

ROC Curve Analysis & AUC Comparison :

```{r}
#| label: func_plot_roc_curve
#| include: false
plot_roc_curve <- function(model, datatest) {
  predicted <- predict(model, newdata = datatest, type = "response")
  predicted_class <- ifelse(predicted >= 0.5, ">50k", "<=50k")
  score <- ROCR::prediction(predicted, datatest$Income)
  perf <- ROCR::performance(score, "tpr", "fpr")
  auc <- ROCR::performance(score, "auc")
  perfd <- data.frame(
    x = perf@x.values[[1]],
    y = perf@y.values[[1]]
  )
  ggplot2::ggplot(perfd, aes(x = x, y = y)) +
    ggplot2::geom_line() +
    ggplot2::xlab("False positive rate") +
    ggplot2::ylab("True positive rate") +
    ggplot2::ggtitle(paste("Area under the curve:", round(auc@y.values[[1]], 3)))
}
```

Stepwise of full model:

```{r}
#| label: fig-ROC-stepAIC_model
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: ROC curve for stepAIC_model
plot_roc_curve(stepAIC_model,data)

```

Mental-Physical Model:

```{r}
#| label: fig-ROC-stepAIC_model-new-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: ROC curve for stepAIC_model_new.1

plot_roc_curve(stepAIC_model_new.1,data.new.1)
```

PRC Model:

```{r}
#| label: fig-ROC-stepAIC_model-new-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: ROC curve for stepAIC_model_new.2

plot_roc_curve(stepAIC_model_new.2,data.new.2)
```

ISCO-08 Model:

```{r}
#| label: fig-ROC-stepAIC_model-new-3
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: ROC curve for stepAIC_model_new.3

plot_roc_curve(stepAIC_model_new.3,data.new.3)
```

To ensure the reliability and effectiveness of the logistic regression models, multiple validation techniques are applied, including coefficient visualization, ROC curve analysis, and ANOVA testing.

Coefficient Visualization: By visualizing the coefficients of the model, one can intuitively understand the direction and strength of the impact of each independent variable on the dependent variable. If the confidence interval of a variable lies entirely to the right of 1 (OR \> 1), it indicates a positive relationship between the variable and the dependent variable. If the confidence interval lies entirely to the left of 1 (OR \< 1), it suggests a negative relationship. If the confidence interval spans across 1, the positive or negative effect cannot be significantly distinguished.

ROC Curve Analysis & AUC Comparison: The ROC curve (Receiver Operating Characteristic curve) is plotted for each model to assess its classification performance. AUC (Area Under the Curve) values are calculated: A higher AUC (closer to 1) indicates a better-performing model. A lower AUC (closer to 0.5) suggests poor classification performance. The AUC values of different models are compared, helping to determine which occupational classification method improves predictive accuracy.

ANOVA Model Comparison ANOVA (Analysis of Variance) tests compare model fits: A significant p-value (\< 0.05) indicates that additional predictors improve model performance. If models have similar p-values, a simpler model may be preferred to avoid overfitting. The results help in deciding whether stepAIC_model_new.1, stepAIC_model_new.2, or stepAIC_model_new.3 should be used for the final analysis.

Key Takeaways: The ROC curve and AUC values help determine the best occupational classification method in terms of prediction accuracy. Model coefficients provide insights into the most influential factors affecting income. ANOVA helps verify whether additional variables significantly improve prediction performance. The final model selection should balance accuracy and interpretability, preferring models with a high AUC while avoiding excessive complexity.

## Consider the interaction effects

For the Mental-Physical Model, consider the interaction:

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\widehat{\beta}_{\mbox{Low_Education}}\cdot\mathbb{I}_{\mbox{Low_Education}}(x)+\\+\widehat{\beta}_{\mbox{Physical_Labor}}\cdot\mathbb{I}_{\mbox{Physical_Labor}}(x)+\widehat{\beta}_{\mbox{Unmarried}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)+\\+\widehat{\beta}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Male}}(x)+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}+\\+\widehat{\beta}_{\mbox{Unmarrid,Age}}\cdot\mbox{Age}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)+\widehat{\beta}_{\mbox{Unmarrid,Male}}\cdot\mathbb{I}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)$$

```{r}
#| label: interaction-new-1
#| echo: false
model_full_new.1.interaction <-glm(Income ~ (Age +Education + Sex + Hours_PW + Marital_Status + Occupation)^2  + Nationality, family = binomial(link = "logit"),data = data.new.1)

stepAIC_model_new.1.interaction <- stepAIC(
  model_full_new.1.interaction,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model_new.1.interaction)

#Remove insignificant items 
model_new.1.interaction=glm(Income ~ Age + Education  + Sex + Hours_PW + Marital_Status + 
    Occupation + Age:Marital_Status + Sex:Marital_Status ,data = data.new.1, family = binomial(link="logit"))
summary(model_new.1.interaction)

detect_separation_model <- glm(Income ~ Age + Education + Sex + Hours_PW + Marital_Status + 
    Occupation + Age:Marital_Status + Sex:Marital_Status ,data = data.new.1, family = binomial(link="logit"),method='detect_separation')
print(detect_separation_model)

```

ROC Curve Analysis & AUC Comparison:

```{r}
#| label: fig-ROC-interaction-new-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: ROC curve for model_new.1.interaction

plot_roc_curve(model_new.1.interaction,data.new.1)
```

Odds of the model：

```{r}
#| label: fig-model-plot-new-1
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Model Plot for model_new.1.interaction
plot_model(model_new.1.interaction, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)
```

For the PRC Model, consider the interaction:

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\widehat{\beta}_{\mbox{Low_Education}}\cdot\mathbb{I}_{\mbox{Low_Education}}(x)+\\+\sum_{i=1}^{6}\widehat{\beta}_{\mbox{Occupation,i}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)+\widehat{\beta}_{\mbox{Unmarried}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)+\\+\widehat{\beta}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Male}}(x)+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}+\\+\widehat{\beta}_{\mbox{Male,Unmarried}}\cdot\mathbb{I}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)+\sum_{i=1}^{6}\widehat{\beta}_{\mbox{Male,Occupationi}}\cdot\mathbb{I}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)$$

```{r}
#| label: interaction-new-2
#| echo: false
model_full_new.2.interaction <-glm(Income ~ (Age +Education + Sex + Hours_PW + Marital_Status + Occupation)^2  + Nationality, family = binomial(link = "logit"),data = data.new.2)

stepAIC_model_new.2.interaction <- stepAIC(
  model_full_new.2.interaction,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model_new.2.interaction)
#Remove insignificant items 
model_new.2.interaction=glm(formula = Income ~ Age + Education + Sex + Hours_PW + Marital_Status + 
    Occupation  + 
    Sex:Marital_Status + Sex:Occupation , 
    family = binomial(link = "logit"), data = data.new.2)
summary(model_new.2.interaction)

detect_separation_model <- glm(formula = Income ~ Age + Education + Sex + Hours_PW + Marital_Status + 
    Occupation + 
    Sex:Marital_Status + Sex:Occupation , 
    family = binomial(link = "logit"), data = data.new.2,method='detect_separation')
print(detect_separation_model)

```

ROC Curve Analysis & AUC Comparison:

```{r}
#| label: fig-ROC-interaction-new-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: ROC curve for model_new.2.interaction
plot_roc_curve(model_new.2.interaction,data.new.2)
```

Odds of the model：

```{r}
#| label: fig-model-plot-new-2
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Model Plot for model_new.2.interaction
plot_model(model_new.2.interaction, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)
```

For the ISCO-08 Model, consider the interaction:

$$\ln\left(\frac{p}{1 - p}\right)=\widehat{\alpha}+\widehat{\beta}_{\mbox{Age}}\cdot\mbox{Age}+\widehat{\beta}_{\mbox{Low_Education}}\cdot\mathbb{I}_{\mbox{Low_Education}}(x)+\\+\sum_{i=1}^{9}\widehat{\beta}_{\mbox{Occupation,i}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)+\widehat{\beta}_{\mbox{Unmarried}}\cdot\mathbb{I}_{\mbox{Unmarried}}(x)\\++\widehat{\beta}_{\mbox{Male}}\cdot\mathbb{I}_{\mbox{Male}}(x)+\widehat{\beta}_{\mbox{Hour_PW}}\cdot\mbox{Hours_PW}+\\+\sum_{i=1}^{9}\widehat{\beta}_{\mbox{Unmarried,Occupationi}}\cdot\mathbb{I}_{\mbox{Unmarried}}\cdot\mathbb{I}_{\mbox{Occupation,i}}(x)$$

```{r}
#| label: interaction-new-3
#| echo: false
model_full_new.3.interaction <-glm(Income ~ (Age +Education + Sex + Hours_PW + Marital_Status + Occupation)^2  + Nationality, family = binomial(link = "logit"),data = data.new.3)

stepAIC_model_new.3.interaction <- stepAIC(
  model_full_new.3.interaction,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model_new.3.interaction)
#Remove insignificant items 
model_new.3.interaction=glm(formula = Income ~ Age + Sex + Education + Hours_PW + Marital_Status + 
    Occupation   + Marital_Status:Occupation, 
    family = binomial(link = "logit"), data = data.new.3)
summary(model_new.3.interaction)

detect_separation_model <- glm(formula = Income ~ Age + Sex+ Education + Hours_PW + Marital_Status + 
    Occupation   + Marital_Status:Occupation, 
    family = binomial(link = "logit"), data = data.new.3,method='detect_separation')
print(detect_separation_model)

```

ROC Curve Analysis & AUC Comparison:

```{r}
#| label: fig-ROC-interaction-new-3
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: ROC curve for model_new.3.interaction
plot_roc_curve(model_new.3.interaction,data.new.3)
```

Odds of the model：

```{r}
#| label: fig-model-plot-new-3
#| fig-pos: H
#| fig-width: 6
#| fig-height: 4
#| fig-cap: Model Plot for model_new.3.interaction
plot_model(model_new.3.interaction, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)
```

To enhance predictive accuracy and account for potential interdependencies, interaction terms between variables are introduced into the logistic regression model. This allows us to evaluate how combinations of factors influence income classification (\<=50K vs. \>50K).

Key Interaction Effects Identified Model using Physical vs. Mental Labor (model_new.1.interaction): Significant interactions found: Age × Marital Status Sex × Marital Status This suggests that age influences the impact of marital status on income, and gender differences in income depend on marital status. Model using PRC Job Classification (model_new.2.interaction):

Additional significant interactions: Sex × Marital Status Sex × Occupation Marital Status × Occupation This highlights that gender effects on income vary across job categories, and marital status plays a role in occupational income disparities. Model using ISCO-08 Job Classification (model_new.3.interaction):

The most significant interaction: Marital Status × Occupation This suggests that marital status interacts with occupation type to influence income, possibly due to differences in career stability or dual-income households.

Model Performance Assessment ROC curve analysis: The AUC values are compared for interaction models, showing whether incorporating interaction effects improves classification performance. Detect separation tests: Ensures that models do not suffer from convergence issues caused by perfect separation. Stepwise AIC optimization: Helps reduce overfitting by removing redundant interaction terms.

Key Takeaways: Including interaction terms improves model interpretability and accuracy. Marital Status and Occupation consistently interact, meaning these two factors jointly affect income potential. Gender interacts with both Marital Status and Occupation, indicating income disparities linked to societal roles. ROC analysis suggests that models with interactions perform better than those without, validating the importance of capturing interdependencies between variables.

# Model Assumption

The Hosmer-Lemeshow test p-values for all seven models are greater than 0.05, indicating a good model fit. The predicted probabilities do not show a significant difference from the actual data distribution, confirming that the models are suitable for use.

```{r}
#| label: hl-test


hl_test_model <- hoslem.test(stepAIC_model$y, fitted(stepAIC_model), g = 10)
hl_test_model_new.1<-hoslem.test(stepAIC_model_new.1$y, fitted(stepAIC_model_new.1), g = 10)
hl_test_model_new.2<-hoslem.test(stepAIC_model_new.2$y, fitted(stepAIC_model_new.2), g = 10)
hl_test_model_new.3<-hoslem.test(stepAIC_model_new.3$y, fitted(stepAIC_model_new.3), g = 10)
hl_test_model_new.1.interaction<-hoslem.test(model_new.1.interaction$y, fitted(model_new.1.interaction), g = 10)
hl_test_model_new.2.interaction<-hoslem.test(model_new.2.interaction$y, fitted(model_new.2.interaction), g = 10)
hl_test_model_new.3.interaction<-hoslem.test(model_new.3.interaction$y, fitted(model_new.3.interaction), g = 10)

print(hl_test_model)
print(hl_test_model_new.1)
print(hl_test_model_new.2)
print(hl_test_model_new.3)
print(hl_test_model_new.1.interaction)
print(hl_test_model_new.2.interaction)
print(hl_test_model_new.3.interaction)

```

When evaluating the prediction accuracy of the seven models, all models achieved an accuracy greater than 0.8, with a difference of no more than 0.02 between them. This indicates that the models can effectively distinguish between high-income (\>50K) and low-income (\<=50K) groups.

```{r}
#|label: accuracy1
pred_prob1 <- predict(stepAIC_model, type = "response")
pred_class1 <- ifelse(pred_prob1 >= 0.5, ">50K", "<=50K")
confusion_matrix1 <- table(Predicted = pred_class1, Actual = data$Income)
print(confusion_matrix1)
accuracy1 <- sum(diag(confusion_matrix1)) / sum(confusion_matrix1)
print(paste("Accuracy1:", round(accuracy1, 3)))
#0.829
```

```{r}
#|label: accuracy2
pred_prob2 <- predict(stepAIC_model_new.1, type = "response")
pred_class2 <- ifelse(pred_prob2 >= 0.5, ">50K", "<=50K")
confusion_matrix2 <- table(Predicted = pred_class2, Actual = data.new.1$Income)
print(confusion_matrix2)
accuracy2 <- sum(diag(confusion_matrix2)) / sum(confusion_matrix2)
print(paste("Accuracy2:", round(accuracy2, 3)))
#0.809
```

```{r}
#|label: accuracy3
pred_prob3 <- predict(stepAIC_model_new.2, type = "response")
pred_class3 <- ifelse(pred_prob3 >= 0.5, ">50K", "<=50K")
confusion_matrix3 <- table(Predicted = pred_class3, Actual = data.new.2$Income)
print(confusion_matrix3)
accuracy3 <- sum(diag(confusion_matrix3)) / sum(confusion_matrix3)
print(paste("Accuracy3:", round(accuracy3, 3)))
#0.82
```

```{r}
#|label: accuracy4
pred_prob4 <- predict(stepAIC_model_new.3, type = "response")
pred_class4 <- ifelse(pred_prob4 >= 0.5, ">50K", "<=50K")
confusion_matrix4 <- table(Predicted = pred_class4, Actual = data.new.3$Income)
print(confusion_matrix4)
accuracy4 <- sum(diag(confusion_matrix4)) / sum(confusion_matrix4)
print(paste("Accuracy4:", round(accuracy4, 3)))
#0.823
```

```{r}
#|label: accuracy5
pred_prob5 <- predict(model_new.1.interaction, type = "response")
pred_class5 <- ifelse(pred_prob5 >= 0.5, ">50K", "<=50K")
confusion_matrix5 <- table(Predicted = pred_class5, Actual = data.new.1$Income)
print(confusion_matrix5)
accuracy5 <- sum(diag(confusion_matrix5)) / sum(confusion_matrix5)
print(paste("Accuracy5:", round(accuracy5, 3)))
#0.817
```

```{r}
#|label: accuracy6
pred_prob6 <- predict(model_new.2.interaction, type = "response")
pred_class6 <- ifelse(pred_prob6 >= 0.5, ">50K", "<=50K")
confusion_matrix6 <- table(Predicted = pred_class6, Actual = data.new.2$Income)
print(confusion_matrix6)
accuracy6 <- sum(diag(confusion_matrix6)) / sum(confusion_matrix6)
print(paste("Accuracy6:", round(accuracy6, 3)))
#0.825
```

```{r}
#|label: accuracy7
pred_prob7 <- predict(model_new.3.interaction, type = "response")
pred_class7 <- ifelse(pred_prob7 >= 0.5, ">50K", "<=50K")
confusion_matrix7 <- table(Predicted = pred_class7, Actual = data.new.3$Income)
print(confusion_matrix7)
accuracy7 <- sum(diag(confusion_matrix7)) / sum(confusion_matrix7)
print(paste("Accuracy7:", round(accuracy7, 3)))
#0.816
```

The AIC of `model_new.2.interaction` is the smallest, which is 1084.720, indicating the best model fit. Additionally, `model_new.2.interaction` achieves the highest AUC of 0.868, demonstrating the strongest ability to classify high-income (\>50K) and low-income (\<=50K) groups.

```{r}
#|label: AIC
AIC(stepAIC_model, stepAIC_model_new.1,stepAIC_model_new.2,stepAIC_model_new.3,model_new.1.interaction,model_new.2.interaction,model_new.3.interaction)

```
