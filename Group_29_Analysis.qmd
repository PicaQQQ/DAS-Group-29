---
title: "Analysis of individual earns"
author: "Group 29"
number-sections: true
format:  
  html:
    embed-resources: true
    code-tools: true
    code-overflow: wrap
  pdf: default
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  eval: true
  warning: false
  message: false
output:
  pdf_document:
    keep_tex: false
---

```{r}
#| label: libraries
#| include: false
library(tidyverse)
library(MASS)
library(detectseparation)
library(arm)
library(caret)
library(ggplot2)
library(glmnet)
library(moderndive)
library(gapminder)
library(sjPlot)
library(stats)
library(jtools)
library(janitor)
library(dplyr)
library(GGally)
library(ROCR)
```

```{r}
#| label: data_tidy
#| include: false
data <- read.csv("dataset29.csv", header = TRUE, na.strings = c("?", " ", "","?,"))
data <- data %>%
  mutate(across(where(is.character), ~ gsub(",$", "", trimws(.))),
         Income = factor(Income, levels = c("<=50K", ">50K")),
         across(c(Education, Marital_Status, Occupation, Sex, Nationality), as.factor))
data$Hours_PW <- as.numeric(data$Hours_PW)
#delete NA items
sum(is.na(data))
data <- na.omit(data)
```

# Introduction

**Dataset 29** were collected from the US 1994 Census database. This dataset contain data on individuals regarding their income level, and various socioeconomic factors. You will have access to the following variables:

-   ​**Age** - The age of the individual in years\
-   ​**Education** - Highest education level obtained by the individual\
-   ​**Marital_Status** - The marital status of the individual\
-   ​**Occupation** - The occupation of the individual\
-   ​**Sex** - The sex of the individual\
-   ​**Hours_Pw** - Number of hours worked per week by the individual\
-   ​**Nationality** - The nationality of birth of the individual\
-   ​**Income** - A factor variable with two levels: `>50k` if the individual earns more than \$50k per year, or `<=50k` if the individual earns less than or equal to \$50k per year

------------------------------------------------------------------------

## Task

Imagine you have been tasked by the government to identify which features based on the census data impact the income an individual makes: - Which factors influence whether an individual earns more than \$50k per year?

You should:

1\. Conduct an analysis to answer your question using a ​**Generalised Linear Model (GLM)**\
2. Summarise your results in the form of a presentation

# Exploratory Data Analysis {#sec-EDA}

Summary statistics of **Income** are presented in the following for each column separately.

Observe the correlation of the numeric of data:

```{r}
#| label: fig-Numeric-Data
#| echo: false
#| fig-cap: Numeric Data Correlation 
ggpairs(data[,c("Age","Hours_PW","Income")])
```

## Data levels

```{r}
#| label: data-levels
#| echo: false
levels(data$Education)
levels(data$Marital_Status)
levels(data$Occupation)
levels(data$Sex)
levels((data$Nationality))
```

```{r}
#| label: fig-Income-Distribution
#| echo: false
#| fig-cap: Income Distribution.

ggplot(data, aes(Income)) + 
  geom_bar()
```

## Occupation by Income

```{r}
#| label: tbl-Occupation -Distribution
#| tbl-cap: Occupation Distribution.

data %>%
  tabyl(Income,Occupation ) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
```

```{r}
#| label: fig-Occupation-Distribution
#| fig-pos: h
#| fig-cap: Occupation Distribution.

ggplot(data, aes(x=Occupation)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Occupation
#| fig-pos: h
#| fig-cap: Income by Occupation.
ggplot(data, aes(x = Income, fill = Occupation)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Occupation") +
  coord_flip()
ggplot(data=data,aes(x=Income,group=Occupation))+
  geom_bar(aes(y=..prop..,fill=Occupation),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

## Education by Income

```{r}
#| label: tbl-Education-Distribution
#| tbl-cap: Education Distribution.

data %>%
  tabyl(Income,Education) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
```

```{r}
#| label: fig-Education-Distribution
#| fig-pos: h
#| fig-cap: Education Distribution.

ggplot(data, aes(x=Education)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Education
#| fig-pos: h
#| fig-cap: Income by Education.
# Income~Education
ggplot(data, aes(x = Income, fill = Education)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Education") +
  coord_flip()  
ggplot(data=data,aes(x=Income,group=Education))+
  geom_bar(aes(y=..prop..,fill=Education),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

## Martial_Status by Income

```{r}
#| label: tbl-Martial_Status -Distribution
#| tbl-cap: Martial_Status  Distribution.

data %>%
  tabyl(Income,Marital_Status) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
```

```{r}
#| label: fig-Marital_Status-Distribution
#| fig-pos: h
#| fig-cap: Marital_Status Distribution.
ggplot(data, aes(x=Marital_Status)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Marital_Status
#| fig-pos: h
#| fig-cap: Income by Marital_Status.
ggplot(data, aes(x = Income, fill = Marital_Status)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Marital_Status") +
  coord_flip()  
ggplot(data=data,aes(x=Income,group=Marital_Status))+
  geom_bar(aes(y=..prop..,fill=Marital_Status),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

## Sex by Income

```{r}
#| label: tbl-Sex-Distribution
#| tbl-cap: Sex Distribution.

data %>%
  tabyl(Income,Sex) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
```

```{r}
#| label: fig-Sex-Distribution
#| fig-pos: h
#| fig-cap: Sex Distribution.
ggplot(data, aes(x=Sex)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Sex
#| fig-pos: h
#| fig-cap: Income by Sex.

ggplot(data, aes(x = Income, fill = Sex)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Sex") +
  coord_flip()  
ggplot(data=data,aes(x=Income,group=Sex))+
  geom_bar(aes(y=..prop..,fill=Sex),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

## Nationality by Income

```{r}
#| label: tbl-Nationality-Distribution
#| tbl-cap: Nationality Distribution.

data %>%
  tabyl(Income,Nationality) %>%
  adorn_percentages() %>%
  adorn_pct_formatting() %>%
  adorn_ns()
```

```{r}
#| label: fig-Nationality-Distribution
#| fig-pos: h
#| fig-cap: Nationality Distribution.
ggplot(data, aes(x=Nationality)) + 
    geom_bar() + 
    coord_flip()
```

```{r}
#| label: fig-Income-Nationality
#| fig-pos: h
#| fig-cap: Income by Nationality.
# Income~Education
ggplot(data, aes(x = Income, fill = Nationality)) + 
  geom_bar(position = "fill") + 
  labs(x = "Income", y = "Nationality") +
  coord_flip()  
ggplot(data=data,aes(x=Income,group=Nationality))+
  geom_bar(aes(y=..prop..,fill=Nationality),stat = "count",position="dodge")+
  labs(x="Whether larger than 50K",y="Proportion")
```

## Age by Income

```{r}
#| label: fig-Age-Distribution
#| fig-pos: h
#| fig-cap: Age Distribution.
ggplot(data, aes(x = Age)) +
  geom_histogram(
    bins = 20, 
    fill = "skyblue", 
    color = "white",
    alpha = 0.7
  )
```

```{r}
#| label: fig-Income-Age
#| fig-pos: h
#| fig-cap: Income by Age.
ggplot(data, aes(x = Age, y = Income)) +
  geom_boxplot() +
  labs(x = "Age", y = "Income")
```

## Hours_pw by Income

```{r}
#| label: fig-Hours_PW-Distribution
#| fig-pos: h
#| fig-cap: Hours_PW Distribution.
ggplot(data, aes(x = Hours_PW)) +
  geom_histogram(
    bins = 20, 
    fill = "lightpink", 
    color = "white",
    alpha = 0.7
  )
```

```{r}
#| label: fig-Income-Hours_PW
#| fig-pos: h
#| fig-cap: Income by Hours_PW.
ggplot(data, aes(x = Hours_PW, y = Income)) +
  geom_boxplot() +
  labs(x = "Hours_PW", y = "Income")
```

# Model selection

fitting full model.

```{r}
#| label: glm_full_model
#| echo: false

full_model = glm(Income ~ Age + Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"), data = data)

detect_separation_full_model =glm(Income ~ Age + Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"), data = data,method='detect_separation')

print(detect_separation_full_model)
summary(full_model)

```

```{r}
#| label: glm_stepAIC_model
#| echo: false

stepAIC_model <- stepAIC(
  full_model,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model)
detect_separation_stepAIC_model=glm(formula = Age + Education + Hours_PW + Marital_Status + Occupation, family = binomial(link = "logit"), data = data,method='detect_separation')
print(detect_separation_stepAIC_model)

```

### Option choose of model

To resolve the complete separation issue, merge the categories of some explanatory variables.

```{r}
#| label: merge-Education-Marital_Status
data.new <- data

data.new$Education <- as.factor(ifelse(data.new$Education %in% c("1st-4th", "5th-6th", "7th-8th", "9th", "10th", "11th", "12th"), "Low_Education", as.character(data.new$Education)))
data.new$Education <- as.factor(ifelse(data.new$Education %in% c("Assoc-acdm","Assoc-voc","Bachelors","Doctorate","HS-grad","Masters","Prof-school","Some-college"), "High_Education", as.character(data.new$Education)))

data.new$Marital_Status <- as.factor(ifelse(data.new$Marital_Status %in% c( "Separated", "Widowed","Never-married","Divorced"), "Unmarried", as.character(data.new$Marital_Status)))

data.new$Marital_Status <- as.factor(ifelse(data.new$Marital_Status %in% c("Married-spouse-absent","Married-civ-spouse"), "Married", as.character(data.new$Marital_Status)))


```

```{r}
#| label: merge-Education-Marital_Status
data.new$Occupation <- as.factor(ifelse(data.new$Occupation %in% c("Adm-clerical","Exec-managerial","Prof-specialty","Sales","Tech-support"), "Mental Labor", as.character(data.new$Occupation)))

data.new$Occupation <- as.factor(ifelse(data.new$Occupation %in% c("Craft-repair","Farming-fishing","Handlers-cleaners","Machine-op-inspct","Transport-moving","Other-service","Priv-house-serv","Protective-serv"), "Physical Labor", as.character(data.new$Occupation)))

```

```{r}
model_full_new <-glm(Income ~ Age + Education + Sex + Hours_PW + Marital_Status + Occupation  + Nationality, family = binomial(link = "logit"),data = data.new)

stepAIC_model_new <- stepAIC(
  model_full_new,
  direction = "both",   
  trace = FALSE
)
summary(stepAIC_model_new)

detect_separation_stepAIC_model_new <- glm(Income ~ Age + Education + Marital_Status +Occupation+ Hours_PW,data = data.new, family = binomial(link="logit"),method='detect_separation')
print(detect_separation_stepAIC_model_new)

summary(stepAIC_model_new)
```

# Model Check

```{r}
plot_model(stepAIC_model_new, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)
plot_model(stepAIC_model, show.values = TRUE,
           title = "", show.p = FALSE, value.offset = 0.5)
```

```{r}
plot_roc_curve <- function(model, datatest) {
  # 预测概率
  predicted <- predict(model, newdata = datatest, type = "response")
  
  # 将概率转换为分类
  predicted_class <- ifelse(predicted >= 0.5, ">50k", "<=50k")
  
  # 计算 ROC 曲线的性能指标
  score <- ROCR::prediction(predicted, datatest$Income)
  perf <- ROCR::performance(score, "tpr", "fpr")
  auc <- ROCR::performance(score, "auc")
  
  # 提取 ROC 曲线的数据
  perfd <- data.frame(
    x = perf@x.values[[1]],
    y = perf@y.values[[1]]
  )
  
  # 绘制 ROC 曲线
  ggplot2::ggplot(perfd, aes(x = x, y = y)) +
    ggplot2::geom_line() +
    ggplot2::xlab("False positive rate") +
    ggplot2::ylab("True positive rate") +
    ggplot2::ggtitle(paste("Area under the curve:", round(auc@y.values[[1]], 3)))
}
```

```{r}
plot_roc_curve(stepAIC_model,data)
plot_roc_curve(stepAIC_model_new,data.new)
```
